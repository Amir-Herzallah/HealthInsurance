@model Tuple<IEnumerable<Users>, IEnumerable<Subscriptions>,IEnumerable<JoinTables>,IEnumerable<Testimonials>,IEnumerable<Beneficiaries>>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<!-- partial -->
<link href="https://cdn.datatables.net/1.11.1/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.0.0/css/buttons.dataTables.min.css" rel="stylesheet" />

<div class="main-panel">
    <div class="content-wrapper">
        <div class="page-header">
            <h3 class="page-title"> Basic Tables </h3>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Tables</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Basic tables</li>
                </ol>
            </nav>
        </div>
        <div class="row">
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <table id="table1" class="table ">
                            <thead>
                                <tr>
                                    <th>Customer Name</th>
                                    <th>Subscription Date</th>
                                    <th>Total Beneficiaries</th>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Item3)
                                {
                                    if (item.subscriptions.Status == "Subscribed")
                                    {
                                        <tr>
                                            <td> @item.users.Username</td>
                                            <td> @item.subscriptions.StartDate</td>
                                            @if (item.beneficiaries != null)
                                            {
                                                <td> @item.subscriptions.Beneficiaries.Count</td>
                                            }
                                            else
                                            {
                                                <td>No Beneficiaries</td>
                                            }
                                            @* <td><label class="badge badge-danger">Pending</label></td> *@
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <table id="table2" class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Testimonial</th>
                                    <th>Rating</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    double totalRating = 0;
                                    double totalRatingsCount = 0;

                                    foreach (var item in Model.Item3)
                                    {
                                        <tr>
                                            <td> @item.testimonials.Commentt</td>
                                            <td> @item.testimonials.Rating</td>
                                        </tr>
                                        totalRating = totalRating + (double)item.testimonials.Rating;
                                        totalRatingsCount++;
                                    }
                                    var averageRating = totalRating / totalRatingsCount;
                                    <tr>
                                        <td><strong>Average Rating:</strong></td>
                                        <td>@averageRating</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 offset-3 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <table id="table3" class="table table-striped">
                            <thead>
                                <tr>
                                    <th> # of subscriptions </th>
                                    <th> Profit </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    double totalProfit = 0;
                                    int subCount = 0;
                                    foreach (var item in Model.Item3)
                                    {
                                        totalProfit = totalProfit + (double)item.subscriptions.Amount;
                                        subCount = subCount + 1;
                                    }
                                    <tr>
                                        <td>@subCount</td>
                                        <td>@totalProfit</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="content-wrapper">
        <div class="row">
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Line chart</h4>
                        <canvas id="lineChart" style="height:250px"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Bar chart</h4>
                        <canvas id="barChart" style="height:230px"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- content-wrapper ends -->
</div>

<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.datatables.net/1.11.1/js/jquery.dataTables.min.js" defer></script>
<script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js" defer></script>

<script>
    $(document).ready(function () {
        $('#table1').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'Customer_Beneficiares_Report', // Set the title here
                }
            ]
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#table2').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'Testimonials_Ratings_Report', // Set the title here
                }
            ]
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#table3').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'Total_Subs_Profits_Report', // Set the title here
                }
            ]
        });
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Extract the data for the charts from Model.Item3
        var years = [];
        var totalProfitData = [];
        var subscriptionCountData = [];

    @foreach (var item in Model.Item3)
    {
        var subscriptionDate = item.subscriptions.StartDate;
        var year = subscriptionDate.Year;
        var profit = (double)item.subscriptions.Amount;
        var subscriptionCount = 1; // Assuming each item represents one subscription

        if (item.subscriptions.Status == "Subscribed")
        {
            @:years.push('@year');
            @:totalProfitData.push(@profit);
            @:subscriptionCountData.push(@subscriptionCount);
        }
    }

                // Create a chart for total profit by year
                var profitCanvas = document.getElementById('lineChart');
        var profitChart = new Chart(profitCanvas, {
            type: 'line',
            data: {
                labels: years,
                datasets: [{
                    label: 'Total Profit',
                    data: totalProfitData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2,
                    fill: false
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        // Create a chart for subscription count by year
        var subscriptionCanvas = document.getElementById('barChart');
        var subscriptionChart = new Chart(subscriptionCanvas, {
            type: 'bar',
            data: {
                labels: years,
                datasets: [{
                    label: 'Subscription Count',
                    data: subscriptionCountData,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    });
</script>


