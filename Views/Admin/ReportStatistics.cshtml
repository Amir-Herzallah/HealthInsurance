@model Tuple<IEnumerable<Users>, IEnumerable<Subscriptions>,IEnumerable<JoinTables>,IEnumerable<Testimonials>,IEnumerable<Beneficiaries>>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<!-- partial -->
<link href="https://cdn.datatables.net/1.11.1/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.0.0/css/buttons.dataTables.min.css" rel="stylesheet" />

<div class="main-panel">
    <div class="content-wrapper">
        <div class="page-header">
            <h3 class="page-title"> Reports Tables </h3>
        </div>
        <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <table id="table1" class="table ">
                            <thead>
                                <tr>
                                    <th>Customer Name</th>
                                    <th>Customer Phone Number</th>
                                    <th>Subscription Date</th>
                                    <th>Subscription Status</th>
                                    <th>Total Beneficiaries</th>
                            </thead>
                            <tbody>
                                @{
                                    var encounteredUsernames = new HashSet<string>(); // To track encountered usernames

                                    foreach (var item in Model.Item3)
                                    {
                                        if (!encounteredUsernames.Contains(item.users.Username))
                                        {
                                            var bene = Model.Item5.FirstOrDefault(t => item.users.Subscription.Id == t.Subscriptionid);
                                            <tr>
                                                <td> @item.users.Username</td>
                                                <td> @item.users.PhoneNumber</td>
                                                <td> @item.subscriptions.StartDate.Date.ToShortDateString()</td>
                                                <td> @item.subscriptions.Status</td>
                                                @{
                                                    if (bene != null)
                                                    {
                                                        <td> @item.subscriptions.Beneficiaries.Count</td>
                                                    }
                                                    else if (bene == null)
                                                    {
                                                        <td>No Beneficiaries</td>
                                                    }
                                                }
                                            </tr>
                                            encounteredUsernames.Add(item.users.Username); // Add the username to the set
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <table id="table2" class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Customer Name</th>
                                    <th>Testimonial</th>
                                    <th>Rating</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var encounteredTestimonials = new HashSet<string>(); // To track encountered testimonials

                                    double totalRating = 0;
                                    double totalRatingsCount = 0;

                                    foreach (var item in Model.Item3)
                                    {
                                        if (!encounteredTestimonials.Contains(item.testimonials.Commentt))
                                        {
                                            <tr>
                                                <td> @item.users.Username</td>
                                                <td> @item.testimonials.Commentt</td>
                                                <td> @item.testimonials.Rating</td>
                                            </tr>
                                            encounteredTestimonials.Add(item.testimonials.Commentt); // Add the testimonial to the set
                                            totalRating = totalRating + (double)item.testimonials.Rating;
                                            totalRatingsCount++;
                                        }
                                    }
                                    var averageRating = totalRating / totalRatingsCount;
                                    <tr>
                                        <td colspan="1"></td>
                                        <td><strong>Average Rating:</strong></td>
                                        <td>@averageRating</td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <!-- Select elements for choosing the month and year -->
                        <label for="monthSelect">Select Month:</label>
                        <select id="monthSelect">
                            <option value="1">January</option>
                            <option value="2">February</option>
                            <option value="3">March</option>
                            <option value="4">April</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">August</option>
                            <option value="9">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>

                        <label for="yearSelect">Select Year:</label>
                        <select id="yearSelect">
                            <option value="2021">2021</option>
                            <option value="2022">2022</option>
                            <option value="2023">2023</option>
                            <option value="2024">2024</option>
                            <option value="2025">2025</option>
                            <option value="2026">2026</option>
                            <option value="2027">2027</option>
                        </select>

                        <table id="table3" class="table table-striped">
                            <thead>
                                <tr>
                                    <th> Period </th>
                                    <th> # of subscriptions </th>
                                    <th> Profit </th>
                                </tr>
                            </thead>
                            <tbody>
                                @* Create placeholders for the monthly and annual totals that will be updated by JavaScript *@
                                <tr>
                                    <td>Monthly</td>
                                    <td id="subCountMonthly">0</td>
                                    <td id="totalProfitMonthly">0</td>
                                </tr>
                                <tr>
                                    <td>Annual</td>
                                    <td id="subCountAnnual">0</td>
                                    <td id="totalProfitAnnual">0</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="content-wrapper">
        <div class="row">
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Line chart</h4>
                        <canvas id="lineChart" style="height:250px"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Bar chart</h4>
                        <canvas id="barChart" style="height:230px"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- content-wrapper ends -->
</div>

<script src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.datatables.net/1.11.1/js/jquery.dataTables.min.js" defer></script>
<script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js" defer></script>

<script>
    $(document).ready(function () {
        $('#table1').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'Customer_Beneficiares_Report', // Set the title here
                }
            ]
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#table2').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'Testimonials_Ratings_Report', // Set the title here
                }
            ]
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('#table3').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pdfHtml5',
                    title: 'Total_Subs_Profits_Report', // Set the title here
                }
            ]
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Function to update the table based on selected month and year
        function updateTable() {
            var selectedMonth = document.getElementById("monthSelect").value;
            var selectedYear = document.getElementById("yearSelect").value;

            // Initialize variables to track monthly and annual totals
            var totalProfitMonthly = 0;
            var subCountMonthly = 0;
            var totalProfitAnnual = 0;
            var subCountAnnual = 0;

            // Iterate over your server-side data (Model.Item3) in JavaScript
            var data = @Html.Raw(Json.Serialize(Model.Item3.ToArray())); // Access $values array

            for (var i = 0; i < data.length; i++) {
                var item = data[i];
                if (item.users && item.users.subscription) {
                    var subscription = item.users.subscription;
                    var profit = subscription.amount;
                    var subscriptionStartDate = new Date(subscription.startDate);
                    var subscriptionMonth = subscriptionStartDate.getMonth() + 1; // JavaScript months are 0-indexed
                    var subscriptionYear = subscriptionStartDate.getFullYear();

                    // Check if the subscription falls within the selected month and year
                    if (subscriptionMonth == selectedMonth && subscriptionYear == selectedYear) {
                        totalProfitMonthly += profit;
                        subCountMonthly++;
                    }

                    // Check if the subscription falls within the selected year
                    if (subscriptionYear == selectedYear) {
                        totalProfitAnnual += profit;
                        subCountAnnual++;
                    }
                }
            }

            // Update the table with the new values
            document.getElementById("subCountMonthly").textContent = subCountMonthly;
            document.getElementById("totalProfitMonthly").textContent = totalProfitMonthly;
            document.getElementById("subCountAnnual").textContent = subCountAnnual;
            document.getElementById("totalProfitAnnual").textContent = totalProfitAnnual;
        }

        // Attach change event listeners to the select elements
        document.getElementById("monthSelect").addEventListener("change", updateTable);
        document.getElementById("yearSelect").addEventListener("change", updateTable);

        // Initialize the table when the page loads
        updateTable();
    });
</script>
 
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Extract the data for the charts from Model.Item3
        var years = [];
        var totalProfitData = [];
        var subscriptionCountData = [];

    @{
        var encounteredUsers = new HashSet<string>();
        foreach (var item in Model.Item3)
        {
            if (!encounteredUsers.Contains(item.users.Username))
            {
                var subscriptionDate = item.subscriptions.StartDate;
                var year = subscriptionDate.Year;
                var profit = (double)item.subscriptions.Amount;
                var subscriptionCount = 1; // Assuming each item represents one subscription

                if (item.subscriptions.Status == "Subscribed")
                {
                    @:years.push(@year);
                    @:totalProfitData.push(@profit);
                    @:subscriptionCountData.push(@subscriptionCount);
                }
                encounteredUsers.Add(item.users.Username);
            }
        }
    }
        var profitCanvas = document.getElementById('lineChart');
        var profitChart = new Chart(profitCanvas, {
            type: 'line',
            data: {
                labels: years,
                datasets: [{
                    label: 'Total Profit',
                    data: totalProfitData,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2,
                    fill: false
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        // Create a chart for subscription count by year
        var subscriptionCanvas = document.getElementById('barChart');
        var subscriptionChart = new Chart(subscriptionCanvas, {
            type: 'bar',
            data: {
                labels: years,
                datasets: [{
                    label: 'Subscription Count',
                    data: subscriptionCountData,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    });
</script>
 